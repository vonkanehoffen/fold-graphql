# Welcome to Serverless!

# See https://github.com/boazdejong/serverless-graphql-api
# See https://serverless.com/blog/make-serverless-graphql-api-using-lambda-dynamodb/

service: fold-backend

plugins:
  - serverless-webpack

custom:
  webpackIncludeModules: true

provider:
  name: aws
  runtime: nodejs6.10
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:DescribeStream
        - dynamodb:ListStreams
      Resource: arn:aws:dynamodb:us-east-1:*:*

functions:
  graphql:
    handler: lib/handler.graphql
    events:
      - http:
          path: graphql
          method: any
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:us-east-1:421945418195:userpool/us-east-1_RfJtclQOy
              # Note: Should be able to get the ARN from cloud formation output...
              # It's WIP in sls: https://github.com/serverless/serverless/issues/3212#issuecomment-307341924
              # 'Fn::GetAtt': [ FoldUserPool, Arn ]

resources:
  Resources:
    FoldsDynamoDbTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: 'folds'
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
    FoldUserPool:
      # Note: CHANGING THIS CONFIG CAN BURN ALL USERS. Pool gets deleted and re-deployed by sls
      # Remember this in production....
      # Ref:
      # https://gist.github.com/singledigit/2c4d7232fa96d9e98a3de89cf6ebe7a5
      # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: FoldUserPool
        SmsVerificationMessage: "Your verification code is {####}."
        AutoVerifiedAttributes:
          - email
        MfaConfiguration: "OFF"
        EmailVerificationSubject: "Your Fold.im verification code"
        EmailVerificationMessage: "Your Fold.im verification code is {####}."
        SmsAuthenticationMessage: "Your Fold.im authentication code is {####}."
        Schema:
          - Name: name
            AttributeDataType: String
            Mutable: true
            Required: true
          - Name: email
            AttributeDataType: String
            Mutable: false
            Required: true
          - Name: phone_number
            AttributeDataType: String
            Mutable: true
            Required: false
        Policies:
          PasswordPolicy:
            RequireLowercase: true
            RequireSymbols: false
            RequireNumbers: true
            MinimumLength: 6
            RequireUppercase: false
        AdminCreateUserConfig:
          InviteMessageTemplate:
            EmailMessage: "Your Fold.im username is {username} and temporary password is {####}."
            EmailSubject: "Your temporary Fold.im password"
            SMSMessage: "Your Fold.im username is {username} and temporary password is {####}."
#          UnusedAccountValidityDays: 28
          AllowAdminCreateUserOnly: false
    UserPoolClient:
      Type: "AWS::Cognito::UserPoolClient"
      Properties:
        ClientName: foldClient
        GenerateSecret: false
        UserPoolId:
          Ref: FoldUserPool
  Outputs:
    UserPoolId:
      Value:
        Ref: FoldUserPool
      Export:
        Name: "FoldUserPool::Id"
#    UserPoolArn:
#      Description: Arn of the cognito user pool
#      Value:
#        'Fn::GetAtt': [ FoldUserPool, Arn ]
#      Export:
#        Name: 'UserPoolArn::Arn'